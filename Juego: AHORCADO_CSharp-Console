// Juego del Ahorcado en C#
// Desarrollado por Luis Mateo Aguirre Soliz
using System;
using System.Collections.Generic;

class Ahorcado
{
    static Random random = new Random();
    static List<string> palabras = new List<string> { "PROGRAMACION", "DESARROLLO", "SOFTWARE", "COMPUTADORA", "INTELIGENCIA" };
    static int puntos = 0; // Variable para acumular puntos del jugador
    
    // Función recursiva para seleccionar una palabra aleatoria de la lista
    static string SeleccionarPalabra(int index = -1)
    {
        if (index == -1)
            index = random.Next(palabras.Count);
        
        return palabras[index];
    }

    // Función para dibujar el ahorcado según el número de intentos fallidos
    static void DibujarAhorcado(int intentosFallidos)
    {
        string[] dibujo = {
            "\n  +---+\n      |\n      |\n      |\n     ===", // 0 fallos
            "\n  +---+\n  O   |\n      |\n      |\n     ===", // 1 fallo
            "\n  +---+\n  O   |\n  |   |\n      |\n     ===", // 2 fallos
            "\n  +---+\n  O   |\n /|   |\n      |\n     ===", // 3 fallos
            "\n  +---+\n  O   |\n /|\  |\n      |\n     ===", // 4 fallos
            "\n  +---+\n  O   |\n /|\  |\n /    |\n     ===", // 5 fallos
            "\n  +---+\n  O   |\n /|\  |\n / \  |\n     ==="  // 6 fallos (pierde)
        };
        Console.WriteLine(dibujo[intentosFallidos]);
    }

    static void Main()
    {
        string palabraSecreta = SeleccionarPalabra(); // Palabra a adivinar
        char[] palabraAdivinada = new string('_', palabraSecreta.Length).ToCharArray(); // Inicializa la palabra oculta con guiones bajos
        int intentosMaximos = 6; // Número máximo de intentos antes de perder
        int intentosFallidos = 0; // Contador de intentos fallidos
        HashSet<char> letrasIngresadas = new HashSet<char>(); // Conjunto para almacenar las letras ingresadas
        
        Console.ForegroundColor = ConsoleColor.Cyan;
        Console.WriteLine("¡Bienvenido al juego del Ahorcado!");
        Console.ResetColor();
        
        while (intentosFallidos < intentosMaximos && new string(palabraAdivinada) != palabraSecreta)
        {
            DibujarAhorcado(intentosFallidos);
            Console.ForegroundColor = ConsoleColor.Yellow;
            Console.WriteLine($"\nPalabra: {new string(palabraAdivinada)}");
            Console.ResetColor();

            Console.ForegroundColor = ConsoleColor.Green;
            Console.WriteLine($"Intentos restantes: {intentosMaximos - intentosFallidos}");
            Console.ResetColor();

            Console.Write("Ingrese una letra: ");
            char letra = char.ToUpper(Console.ReadKey().KeyChar);
            Console.WriteLine();

            // Validar si la letra es válida o ya fue ingresada
            if (!char.IsLetter(letra) || letrasIngresadas.Contains(letra))
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("\nLetra inválida o ya ingresada. Intente nuevamente.");
                Console.ResetColor();
                continue;
            }

            letrasIngresadas.Add(letra); // Agregar la letra al conjunto de ingresadas
            
            if (palabraSecreta.Contains(letra))
            {
                // Reemplazar los guiones bajos por la letra correcta en la palabra adivinada
                for (int i = 0; i < palabraSecreta.Length; i++)
                {
                    if (palabraSecreta[i] == letra)
                    {
                        palabraAdivinada[i] = letra;
                    }
                }
            }
            else
            {
                intentosFallidos++; // Incrementar intentos fallidos si la letra no está en la palabra
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("\n¡Letra incorrecta!");
                Console.ResetColor();
            }
        }

        Console.WriteLine();
        DibujarAhorcado(intentosFallidos);
        if (new string(palabraAdivinada) == palabraSecreta)
        {
            Console.ForegroundColor = ConsoleColor.Blue;
            Console.WriteLine($"¡Felicidades! Adivinaste la palabra: {palabraSecreta}");
            Console.ResetColor();
            puntos += 10; // Sumar puntos por adivinar la palabra
        }
        else
        {
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine($"Perdiste. La palabra era: {palabraSecreta}");
            Console.ResetColor();
        }

        Console.ForegroundColor = ConsoleColor.Magenta;
        Console.WriteLine($"Puntos acumulados: {puntos}"); // Mostrar los puntos obtenidos
        Console.ResetColor();
    }
}


